{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/learn/InstagramClone/frontend/src/components/MyFollowingPost.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport { LoginContext } from \"../context/LoginContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyFollowingPost() {\n  _s();\n  const {\n    userLogin\n  } = useContext(LoginContext);\n  var picLink = \"https://cdn-icons-png.flaticon.com/128/3177/3177440.png\";\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  // const [comment, setComment] = useState(\"\");\n  const [comment, setComment] = useState({});\n  const [show, setShow] = useState(false);\n  const [item, setItem] = useState([]);\n\n  // Toast functions\n  // const notifyA = (msg) => toast.error(msg);\n  const notifyB = msg => toast.success(msg);\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (!token) {\n      navigate(\"/signin\");\n    }\n\n    // Fetching all posts\n    fetch(\"http://localhost:5000/myfollowingpost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      // console.log(result);\n      setData(result);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // to show and hide comments\n  const toggleComment = posts => {\n    if (show) {\n      setShow(false);\n    } else {\n      setShow(true);\n      console.log(posts);\n      setItem(posts);\n    }\n  };\n  const likePost = id => {\n    fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(posts => {\n        if (posts._id === result._id) {\n          return result;\n        } else {\n          return posts;\n        }\n      });\n      setData(newData);\n      // console.log(result);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(posts => {\n        if (posts._id === result._id) {\n          return result;\n        } else {\n          return posts;\n        }\n      });\n      setData(newData);\n      // console.log(result);\n    });\n  };\n\n  // function to make comment\n  const makeComment = (text, id) => {\n    if (text) {\n      fetch(\"http://localhost:5000/comment\", {\n        method: \"put\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          text: text,\n          postId: id\n        })\n      }).then(res => res.json()).then(result => {\n        const newData = data.map(posts => {\n          if (posts._id === result._id) {\n            return result;\n          } else {\n            return posts;\n          }\n        });\n        setData(newData);\n        setComment({});\n        notifyB(\"Comment posted\");\n        // console.log(result);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [data.map(posts => {\n      // console.log('id is ',posts._id)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-pic\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: posts.postedBy.Photo ? posts.postedBy.Photo : picLink,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${posts.postedBy._id}`,\n              children: posts.postedBy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: posts.photo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [posts.likes.includes(JSON.parse(localStorage.getItem(\"user\"))._id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined material-symbols-outlined-red\",\n            onClick: () => {\n              unlikePost(posts._id);\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            onClick: () => {\n              likePost(posts._id);\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [posts.likes.length, \" Likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [posts.body, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"bold\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              toggleComment(posts);\n            },\n            children: \"View all comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            children: \"mood\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment\",\n            value: comment[`${posts._id}`] ? comment[`${posts._id}`] : \"\",\n            name: posts._id,\n            onChange: e => {\n              setComment({\n                [e.target.name]: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comment\",\n            onClick: () => {\n              makeComment(comment[`${posts._id}`], posts._id);\n            },\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this)]\n      }, posts._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this);\n    }), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postPic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            style: {\n              borderBottom: \"1px solid #00000029\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-pic\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: item.postedBy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-section\",\n            style: {\n              borderBottom: \"1px solid #00000029\"\n            },\n            children: item.comments.map(comment => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"comm\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"commenter\",\n                  style: {\n                    fontWeight: \"bolder\"\n                  },\n                  children: [comment.postedBy.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"commentText\",\n                  children: comment.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.likes.length, \" Likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined\",\n              children: \"mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a comment\",\n              value: comment[`${item._id}`] ? comment[`${item._id}`] : \"\",\n              name: item._id,\n              onChange: e => {\n                setComment({\n                  [e.target.name]: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"comment\",\n              onClick: () => {\n                makeComment(comment[`${item._id}`], item._id);\n                toggleComment();\n              },\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-comment\",\n        onClick: () => {\n          toggleComment();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined material-symbols-outlined-comment\",\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n_s(MyFollowingPost, \"jH9HmhMjwsM1NFqVZGCIr+KP65I=\", false, function () {\n  return [useNavigate];\n});\n_c = MyFollowingPost;\nvar _c;\n$RefreshReg$(_c, \"MyFollowingPost\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useNavigate","toast","Link","LoginContext","jsxDEV","_jsxDEV","MyFollowingPost","_s","userLogin","picLink","navigate","data","setData","comment","setComment","show","setShow","item","setItem","notifyB","msg","success","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","result","catch","err","console","log","toggleComment","posts","likePost","id","method","body","JSON","stringify","postId","newData","map","_id","unlikePost","makeComment","text","className","children","src","postedBy","Photo","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","name","photo","likes","includes","parse","onClick","length","style","fontWeight","cursor","type","placeholder","value","onChange","e","target","borderBottom","comments","_c","$RefreshReg$"],"sources":["/home/abhishek/learn/InstagramClone/frontend/src/components/MyFollowingPost.js"],"sourcesContent":["\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport { LoginContext } from \"../context/LoginContext\";\n\n\nexport default function MyFollowingPost() {\n    const { userLogin } = useContext(LoginContext)\n    var picLink = \"https://cdn-icons-png.flaticon.com/128/3177/3177440.png\"\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    // const [comment, setComment] = useState(\"\");\n    const [comment, setComment] = useState({});\n    const [show, setShow] = useState(false);\n    const [item, setItem] = useState([]);\n\n    // Toast functions\n    // const notifyA = (msg) => toast.error(msg);\n    const notifyB = (msg) => toast.success(msg);\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        if (!token) {\n            navigate(\"/signin\");\n        }\n\n        // Fetching all posts\n        fetch(\"http://localhost:5000/myfollowingpost\", {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n        })\n            .then((res) => res.json())\n            .then((result) => {\n                // console.log(result);\n                setData(result);\n            })\n            .catch((err) => console.log(err));\n    }, []);\n\n    // to show and hide comments\n    const toggleComment = (posts) => {\n        if (show) {\n            setShow(false);\n        } else {\n            setShow(true);\n            console.log(posts);\n            setItem(posts);\n        }\n    };\n\n    const likePost = (id) => {\n        fetch(\"http://localhost:5000/like\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                postId: id,\n            }),\n        })\n            .then((res) => res.json())\n            .then((result) => {\n                const newData = data.map((posts) => {\n                    if (posts._id === result._id) {\n                        return result;\n                    } else {\n                        return posts;\n                    }\n                });\n                setData(newData);\n                // console.log(result);\n            });\n    };\n    const unlikePost = (id) => {\n        fetch(\"http://localhost:5000/unlike\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({\n                postId: id,\n            }),\n        })\n            .then((res) => res.json())\n            .then((result) => {\n                const newData = data.map((posts) => {\n                    if (posts._id === result._id) {\n                        return result;\n                    } else {\n                        return posts;\n                    }\n                });\n                setData(newData);\n                // console.log(result);\n            });\n    };\n\n    // function to make comment\n    const makeComment = (text, id) => {\n        if (text) {\n\n\n            fetch(\"http://localhost:5000/comment\", {\n                method: \"put\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n                },\n                body: JSON.stringify({\n                    text: text,\n                    postId: id,\n                }),\n            })\n                .then((res) => res.json())\n                .then((result) => {\n                    const newData = data.map((posts) => {\n                        if (posts._id === result._id) {\n                            return result;\n                        } else {\n                            return posts;\n                        }\n                    });\n                    setData(newData);\n                    setComment({});\n                    notifyB(\"Comment posted\");\n                    // console.log(result);\n                });\n        }\n    };\n\n    return (\n        <div className=\"home\">\n            {/* card */}\n            {data.map((posts) => {\n                // console.log('id is ',posts._id)\n                return (\n\n                    <div className=\"card\" key={posts._id}>\n                        {/* card header */}\n                        <div className=\"card-header\">\n                            <div className=\"card-pic\">\n                                <img\n                                    src={posts.postedBy.Photo ? posts.postedBy.Photo : picLink}\n                                    alt=\"\"\n                                />\n                            </div>\n                            <h5>\n                                <Link to={`/profile/${posts.postedBy._id}`}>\n                                    {posts.postedBy.name}\n                                </Link>\n                            </h5>\n                        </div>\n                        {/* card image */}\n                        <div className=\"card-image\">\n                            <img src={posts.photo} alt=\"\" />\n                        </div>\n\n                        {/* card content */}\n                        <div className=\"card-content\">\n                            {posts.likes.includes(\n                                JSON.parse(localStorage.getItem(\"user\"))._id\n                            ) ? (\n                                <span\n                                    className=\"material-symbols-outlined material-symbols-outlined-red\"\n                                    onClick={() => {\n                                        unlikePost(posts._id);\n                                    }}\n                                >\n                                    favorite\n                                </span>\n                            ) : (\n                                <span\n                                    className=\"material-symbols-outlined\"\n                                    onClick={() => {\n                                        likePost(posts._id);\n                                    }}\n                                >\n                                    favorite\n                                </span>\n                            )}\n\n                            <p>{posts.likes.length} Likes</p>\n                            <p>{posts.body} </p>\n                            <p\n                                style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\n                                onClick={() => {\n                                    toggleComment(posts);\n                                }}\n                            >\n                                View all comments\n                            </p>\n                        </div>\n\n                        {/* add Comment */}\n                        <div className=\"add-comment\">\n                            <span className=\"material-symbols-outlined\">mood</span>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Add a comment\"\n                                value={comment[`${posts._id}`] ? comment[`${posts._id}`] : \"\"}\n                                name={posts._id}\n                                onChange={(e) => {\n                                    setComment({\n                                        [e.target.name]: e.target.value\n                                    });\n                                }}\n                            />\n                            <button\n                                className=\"comment\"\n                                onClick={() => {\n                                    makeComment(comment[`${posts._id}`], posts._id);\n                                }}\n                            >\n                                Post\n                            </button>\n                        </div>\n                    </div>\n                );\n            })}\n\n            {/* show Comment */}\n            {show && (\n                <div className=\"showComment\">\n                    <div className=\"container\">\n                        <div className=\"postPic\">\n                            <img src={item.photo} alt=\"\" />\n                        </div>\n                        <div className=\"details\">\n                            {/* card header */}\n                            <div\n                                className=\"card-header\"\n                                style={{ borderBottom: \"1px solid #00000029\" }}>\n                                <div className=\"card-pic\">\n                                    <img\n                                        src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\n                                        alt=\"\"\n                                    />\n                                </div>\n                                <h5>{item.postedBy.name}</h5>\n                            </div>\n\n                            {/* commentSection */}\n                            <div\n                                className=\"comment-section\"\n                                style={{ borderBottom: \"1px solid #00000029\" }}\n                            >\n                                {item.comments.map((comment) => {\n                                    return (\n                                        <p className=\"comm\">\n                                            <span\n                                                className=\"commenter\"\n                                                style={{ fontWeight: \"bolder\" }}>\n\n                                                {comment.postedBy.name}{\" \"}\n                                            </span>\n                                            <span className=\"commentText\">{comment.comment}</span>\n                                        </p>\n                                    );\n                                })}\n                            </div>\n\n                            {/* card content */}\n                            <div className=\"card-content\">\n                                <p>{item.likes.length} Likes</p>\n                                <p>{item.body}</p>\n                            </div>\n\n                            {/* add Comment */}\n                            {/* <div className=\"add-comment\">\n                <span className=\"material-symbols-outlined\">mood</span>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  value={comment}\n                  onChange={(e) => {\n                    setComment(e.target.value);\n                  }}\n                />\n                <button\n                  className=\"comment\"\n                  onClick={() => {\n                    makeComment(comment, item._id);\n                    toggleComment();\n                  }}\n                >\n                  Post\n                </button>\n              </div> */}\n\n                            <div className=\"add-comment\">\n                                <span className=\"material-symbols-outlined\">mood</span>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Add a comment\"\n                                    value={comment[`${item._id}`] ? comment[`${item._id}`] : \"\"}\n                                    name={item._id}\n                                    onChange={(e) => {\n                                        setComment({\n                                            [e.target.name]: e.target.value\n                                        });\n                                    }}\n                                />\n                                <button\n                                    className=\"comment\"\n                                    onClick={() => {\n                                        makeComment(comment[`${item._id}`], item._id);\n                                        toggleComment()\n                                    }}\n                                >\n                                    Post\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        className=\"close-comment\"\n                        onClick={() => {\n                            toggleComment();\n                        }}\n                    >\n                        <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\n                            close\n                        </span>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}